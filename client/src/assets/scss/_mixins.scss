@import "_color-palette";

@mixin themify($themes: $themes) {
    @each $theme, $map in $themes {
        .theme-#{$theme} & {
            $theme-map: () !global;
            @each $key, $submap in $map {
                $value: map-get(map-get($themes, $theme), "#{$key}");
                $theme-map: map-merge(
                    $theme-map,
                    (
                        $key: $value,
                    )
                ) !global;
            }

            @content;
            $theme-map: null !global;
        }
    }
}
@function theme-based($key) {
    @return map-get($theme-map, $key);
}

// refactor ?
@mixin base-button($key) {
    @include themify {
        border-color: theme-based($key);
        &:hover {
            color: black;
            background-color: theme-based($key);
            // box-shadow: 0 0 10px 5px theme-based($key);
            cursor: pointer;
        }
    }
    // background-color: transparent;
    background-color: transparent;
    width: $button-width;
    padding: 10px 5px 5px 5px;
    border-width: 2px;
    border-style: solid;
    margin-bottom: $margin-size;
    color: inherit;
    font-family: inherit;
    font-size: inherit;
    text-transform: inherit;
}

$ship-border: 2px;
@mixin ship-part-background($key) {
    margin-top: -$ship-border;
    margin-left: -$ship-border;
    @include themify {
        background-color: rgba($color: theme-based($key), $alpha: 0.5);
        border: $ship-border solid theme-based($key);
    }
}
// @mixin border-shadow($key){
//     @include themify{
//         box-shadow: 0 0 10px 5px theme-based($key);
//     }
// }
